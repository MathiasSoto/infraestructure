version: '3'

# docker network create --subnet 172.200.1.0/24 dev

networks:
  tesla_network:
    external:
      name: dev

services:

  redis:
    build:
      dockerfile: Dockerfile
      context: redis/
    image: redis
    container_name: redis
    restart: always
    networks:
      tesla_network:
        ipv4_address: 172.200.1.5
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data/redis:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      ENVIRONMENT: "local"
    tty: true

  elastic:
    build:
      dockerfile: Dockerfile
      context: elastic/
    image: elastic
    container_name: elastic
    restart: always
    networks:
      tesla_network:
        ipv4_address: 172.200.1.2
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./elastic/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    environment:
      ENVIRONMENT: "local"
      discovery.type: "single-node"
    tty: true

  kibana:
    build:
      dockerfile: Dockerfile
      context: kibana/
    image: kibana
    container_name: kibana
    restart: always
    networks:
      tesla_network:
        ipv4_address: 172.200.1.3
    ports:
      - "5601:5601"
    links:
      - elastic
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    environment:
      ENVIRONMENT: "local"
    tty: true

  postgres:
    build:
      dockerfile: Dockerfile
      context: postgres/
    image: postgres
    container_name: postgres
    restart: always
    networks:
      tesla_network:
        ipv4_address: 172.200.1.4
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/postgresql/data:/var/lib/postgresql/data
    environment:
      ENVIRONMENT: "local"
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: postgres
      POSTGRES_DB: fooding
    tty: true